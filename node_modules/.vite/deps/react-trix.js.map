{
  "version": 3,
  "sources": ["../../react-trix/src/react-trix.tsx", "../../react-trix/main.js"],
  "sourcesContent": ["import * as React from \"react\";\nimport { BoxSizingProperty } from \"csstype\";\n\nexport interface MergeTag {\n  tag: string;\n  name: string;\n}\n\nexport interface MergeTags {\n  trigger: string;\n  tags: Array<MergeTag>;\n}\n\nexport interface TrixEditorProps {\n  className?: string;\n  autoFocus?: boolean;\n  placeholder?: string;\n  toolbar?: string;\n  value?: string;\n  uploadURL?: string;\n  uploadData?: { [key: string]: string };\n  fileParamName?: string;\n\n  /* list of available merge tag */\n  mergeTags: Array<MergeTags>;\n\n  onEditorReady?: (editor: any) => void;\n  onChange: (html: string, text: string) => void;\n}\n\nexport interface TrixEditorState {\n  showMergeTags: boolean;\n  tags: Array<MergeTag>;\n}\n\nexport interface Editor {\n  getSelectedRange: () => Array<number>;\n  setSelectedRange: (range: Array<number>) => void;\n  getClientRectAtPosition: (pos: number) => Rect;\n  expandSelectionInDirection: (direction: \"forward\" | \"backward\") => void;\n  insertString: (s: string) => void;\n}\n\nexport interface Rect {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n  width: number;\n  height: number;\n}\n\nexport class TrixEditor extends React.Component<TrixEditorProps, TrixEditorState> {\n  private id: string;\n  private container: any = null;\n  private editor: Editor = null;\n  private d: HTMLDivElement = null;\n  constructor(props: TrixEditorProps) {\n    super(props);\n\n    this.id = this.generateId();\n\n    this.state = {\n      showMergeTags: false,\n      tags: []\n    }\n  }\n  private generateId(): string {\n    let dt = new Date().getTime();\n    let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        let r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n        return (c=='x' ? r :(r&0x3|0x8)).toString(16);\n    });\n    return \"T\" + uuid;\n  }\n  componentDidMount() {\n    let props = this.props;\n\n    this.container = document.getElementById(`editor-${this.id}`);\n    //this.container = this.d && this.d.children && this.d.children.length >= 2 ? this.d.children[1] : null;\n    //this.editor = this.d;\n    if (this.container) {\n      this.container.addEventListener(\"trix-initialize\", () => {\n        this.editor = this.container.editor;\n        if (!this.editor) {\n          console.error(\"cannot  find trix editor\");\n        }\n\n        if (props.onEditorReady && typeof props.onEditorReady == \"function\") {\n          props.onEditorReady(this.editor);\n        }\n      }, false);\n      this.container.addEventListener('trix-change', this.handleChange.bind(this), false);\n\n      if (props.uploadURL) {\n        this.container.addEventListener(\"trix-attachment-add\", this.handleUpload.bind(this));\n      }\n    } else {\n      console.error(\"editor not found\");\n    }\n  }\n  componentWillUnmount() {\n    this.container.removeEventListener(\"trix-initialize\", this.handleChange);\n    this.container.removeEventListener(\"trix-change\", this.handleChange);\n\n    if (this.props.uploadURL) {\n      this.container.removeEventListener(\"trix-attachment-add\", this.handleUpload);\n    }\n  }\n  private handleChange(e) {\n    const props = this.props;\n    let state: TrixEditorState = this.state;\n    const text: string = e.target.innerText;\n\n    if (props.onChange) {\n      props.onChange(e.target.innerHTML, text);\n    }\n\n    const range = this.editor.getSelectedRange();\n\n    // if we have a collapse selection\n    if (text && range[0] == range[1]) {\n      // if we have a merge tag mergeTagTrigger\n      if (props.mergeTags) {\n        // get the cursor position and compare the last character with our mergeTagTrigger\n        const lastChar = range[0] - 1;\n        if (lastChar >= 0 && lastChar < text.length) {\n          const trigger = text[lastChar];\n          for (let i = 0; i < props.mergeTags.length; i++) {\n            if (trigger == props.mergeTags[i].trigger) {\n              state.showMergeTags = true;\n              state.tags = props.mergeTags[i].tags;\n              this.setState(state);\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  private handleUpload(e: any) {\n    var attachment = e.attachment;\n    if (attachment.file) {\n      return this.uploadAttachment(attachment);\n    }\n  }\n  private uploadAttachment(attachment: any) {\n    var file, form, xhr;\n    file = attachment.file;\n    form = new FormData();\n    // add any custom data that were passed\n    if (this.props.uploadData) {\n      for (var k in this.props.uploadData) {\n        form.append(k, this.props.uploadData[k]);\n      }\n    }\n    \n    //form.append(\"Content-Type\", \"multipart/form-data\");\n    form.append((this.props.fileParamName || \"file\"), file);\n    xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", this.props.uploadURL, true);\n    xhr.upload.onprogress = (event) => {\n      var progress = event.loaded / event.total * 100;\n      return attachment.setUploadProgress(progress);\n    };\n    xhr.onload = () => {\n      var href, url;\n      if (xhr.status >= 200 && xhr.status < 300) {\n        url = href = xhr.responseText;\n        return attachment.setAttributes({\n          url: url,\n          href: href\n        });\n      }\n    };\n    return xhr.send(form);\n  }\n  private handleTagSelected(t: MergeTag, e: React.MouseEvent<HTMLAnchorElement>): void {\n    e.preventDefault();\n\n    let state: TrixEditorState = this.state;\n    state.showMergeTags = false;\n    this.setState(state);\n\n    this.editor.expandSelectionInDirection(\"backward\");\n    this.editor.insertString(t.tag);\n  }\n  private renderTagSelector(tags: Array<MergeTag>): React.ReactNode {\n    if (!tags || !this.editor) {\n      return null;\n    }\n\n    const editorPosition = document.getElementById(\"trix-editor-top-level-\" + this.id).getBoundingClientRect();\n\n    // current cursor position\n    const rect = this.editor.getClientRectAtPosition(this.editor.getSelectedRange()[0]);\n    const boxStyle = {\n      \"position\": \"absolute\" as \"absolute\",\n      \"top\": rect.top + 25 - editorPosition.top,\n      \"left\": rect.left + 25 - editorPosition.left,\n      \"width\": \"250px\",\n      \"boxSizing\": \"border-box\" as BoxSizingProperty,\n      \"padding\": 0,\n      \"margin\": \".2em 0 0\",\n      \"backgroundColor\": \"hsla(0,0%,100%,.9)\",\n      \"borderRadius\": \".3em\",\n      \"background\": \"linear-gradient(to bottom right, white, hsla(0,0%,100%,.8))\",\n      \"border\": \"1px solid rgba(0,0,0,.3)\",\n      \"boxShadow\": \".05em .2em .6em rgba(0,0,0,.2)\",\n\t    \"textShadow\": \"none\"\n    };\n    const tagStyle = {\n      \"display\": \"block\",\n      \"padding\": \".2em .5em\",\n      \"cursor\": \"pointer\"\n    }\n    return (\n      <div style={boxStyle} className=\"react-trix-suggestions\">\n        {tags.map((t) => {\n          return <a key={t.name} style={tagStyle} href=\"#\" onClick={this.handleTagSelected.bind(this, t)}>{t.name}</a>\n        })}\n      </div>\n    );\n  }\n  render() {\n    let state: TrixEditorState = this.state;\n    let props = this.props;\n\n    var attributes: { [key: string]: string } = {\n      \"id\": `editor-${this.id}`,\n      \"input\": `input-${this.id}`\n    };\n\n    if (props.className) {\n      attributes[\"class\"] = props.className;\n    }\n\n    if (props.autoFocus) {\n      attributes[\"autofocus\"] = props.autoFocus.toString();\n    }\n\n    if (props.placeholder) {\n      attributes[\"placeholder\"] = props.placeholder;\n    }\n\n    if (props.toolbar) {\n        attributes[\"toolbar\"] = props.toolbar;\n    }\n\n    let mergetags: React.ReactNode = null;\n    if (state.showMergeTags) {\n      mergetags = this.renderTagSelector(state.tags);\n    }\n    return (\n      <div id={\"trix-editor-top-level-\" + this.id} ref={(d) => this.d = d} style={{ \"position\": \"relative\" }}>\n        {React.createElement(\"trix-editor\", attributes)}\n        <input\n          type=\"hidden\"\n          id={`input-${this.id}`}\n          value={this.props.value}\n        />\n        {mergetags}\n      </div>\n    );\n  }\n}\n", "exports.TrixEditor = require(\"./lib/react-trix\").TrixEditor;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAAA,QAAA;AAoDA,QAAA,aAAA,SAAA,QAAA;AAAgC,gBAAAA,aAAA,MAAA;AAK9B,eAAAA,YAAY,OAAsB;AAAlC,YAAA,QACE,OAAA,KAAA,MAAM,KAAK,KAAC;AAJN,cAAA,YAAiB;AACjB,cAAA,SAAiB;AACjB,cAAA,IAAoB;AAI1B,cAAK,KAAK,MAAK,WAAU;AAEzB,cAAK,QAAQ;UACX,eAAe;UACf,MAAM,CAAA;;;MAEV;AACQ,MAAAA,YAAA,UAAA,aAAR,WAAA;AACE,YAAI,MAAK,oBAAI,KAAI,GAAG,QAAO;AAC3B,YAAI,OAAO,uCAAuC,QAAQ,SAAS,SAAS,GAAC;AACzE,cAAI,KAAK,KAAK,KAAK,OAAM,IAAG,MAAI,KAAK;AACrC,eAAK,KAAK,MAAM,KAAG,EAAE;AACrB,kBAAQ,KAAG,MAAM,IAAI,IAAE,IAAI,GAAM,SAAS,EAAE;QAChD,CAAC;AACD,eAAO,MAAM;MACf;AACA,MAAAA,YAAA,UAAA,oBAAA,WAAA;AAAA,YAAA,QAAA;AACE,YAAI,QAAQ,KAAK;AAEjB,aAAK,YAAY,SAAS,eAAe,YAAU,KAAK,EAAI;AAG5D,YAAI,KAAK,WAAW;AAClB,eAAK,UAAU,iBAAiB,mBAAmB,WAAA;AACjD,kBAAK,SAAS,MAAK,UAAU;AAC7B,gBAAI,CAAC,MAAK,QAAQ;AAChB,sBAAQ,MAAM,0BAA0B;;AAG1C,gBAAI,MAAM,iBAAiB,OAAO,MAAM,iBAAiB,YAAY;AACnE,oBAAM,cAAc,MAAK,MAAM;;UAEnC,GAAG,KAAK;AACR,eAAK,UAAU,iBAAiB,eAAe,KAAK,aAAa,KAAK,IAAI,GAAG,KAAK;AAElF,cAAI,MAAM,WAAW;AACnB,iBAAK,UAAU,iBAAiB,uBAAuB,KAAK,aAAa,KAAK,IAAI,CAAC;;eAEhF;AACL,kBAAQ,MAAM,kBAAkB;;MAEpC;AACA,MAAAA,YAAA,UAAA,uBAAA,WAAA;AACE,aAAK,UAAU,oBAAoB,mBAAmB,KAAK,YAAY;AACvE,aAAK,UAAU,oBAAoB,eAAe,KAAK,YAAY;AAEnE,YAAI,KAAK,MAAM,WAAW;AACxB,eAAK,UAAU,oBAAoB,uBAAuB,KAAK,YAAY;;MAE/E;AACQ,MAAAA,YAAA,UAAA,eAAR,SAAqB,GAAC;AACpB,YAAM,QAAQ,KAAK;AACnB,YAAI,QAAyB,KAAK;AAClC,YAAM,OAAe,EAAE,OAAO;AAE9B,YAAI,MAAM,UAAU;AAClB,gBAAM,SAAS,EAAE,OAAO,WAAW,IAAI;;AAGzC,YAAM,QAAQ,KAAK,OAAO,iBAAgB;AAG1C,YAAI,QAAQ,MAAM,CAAC,KAAK,MAAM,CAAC,GAAG;AAEhC,cAAI,MAAM,WAAW;AAEnB,gBAAM,WAAW,MAAM,CAAC,IAAI;AAC5B,gBAAI,YAAY,KAAK,WAAW,KAAK,QAAQ;AAC3C,kBAAM,UAAU,KAAK,QAAQ;AAC7B,uBAAS,IAAI,GAAG,IAAI,MAAM,UAAU,QAAQ,KAAK;AAC/C,oBAAI,WAAW,MAAM,UAAU,CAAC,EAAE,SAAS;AACzC,wBAAM,gBAAgB;AACtB,wBAAM,OAAO,MAAM,UAAU,CAAC,EAAE;AAChC,uBAAK,SAAS,KAAK;AACnB;;;;;;MAMZ;AACQ,MAAAA,YAAA,UAAA,eAAR,SAAqB,GAAM;AACzB,YAAI,aAAa,EAAE;AACnB,YAAI,WAAW,MAAM;AACnB,iBAAO,KAAK,iBAAiB,UAAU;;MAE3C;AACQ,MAAAA,YAAA,UAAA,mBAAR,SAAyB,YAAe;AACtC,YAAI,MAAM,MAAM;AAChB,eAAO,WAAW;AAClB,eAAO,IAAI,SAAQ;AAEnB,YAAI,KAAK,MAAM,YAAY;AACzB,mBAAS,KAAK,KAAK,MAAM,YAAY;AACnC,iBAAK,OAAO,GAAG,KAAK,MAAM,WAAW,CAAC,CAAC;;;AAK3C,aAAK,OAAQ,KAAK,MAAM,iBAAiB,QAAS,IAAI;AACtD,cAAM,IAAI,eAAc;AACxB,YAAI,KAAK,QAAQ,KAAK,MAAM,WAAW,IAAI;AAC3C,YAAI,OAAO,aAAa,SAAC,OAAK;AAC5B,cAAI,WAAW,MAAM,SAAS,MAAM,QAAQ;AAC5C,iBAAO,WAAW,kBAAkB,QAAQ;QAC9C;AACA,YAAI,SAAS,WAAA;AACX,cAAI,MAAM;AACV,cAAI,IAAI,UAAU,OAAO,IAAI,SAAS,KAAK;AACzC,kBAAM,OAAO,IAAI;AACjB,mBAAO,WAAW,cAAc;cAC9B;cACA;aACD;;QAEL;AACA,eAAO,IAAI,KAAK,IAAI;MACtB;AACQ,MAAAA,YAAA,UAAA,oBAAR,SAA0B,GAAa,GAAsC;AAC3E,UAAE,eAAc;AAEhB,YAAI,QAAyB,KAAK;AAClC,cAAM,gBAAgB;AACtB,aAAK,SAAS,KAAK;AAEnB,aAAK,OAAO,2BAA2B,UAAU;AACjD,aAAK,OAAO,aAAa,EAAE,GAAG;MAChC;AACQ,MAAAA,YAAA,UAAA,oBAAR,SAA0B,MAAqB;AAA/C,YAAA,QAAA;AACE,YAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ;AACzB,iBAAO;;AAGT,YAAM,iBAAiB,SAAS,eAAe,2BAA2B,KAAK,EAAE,EAAE,sBAAqB;AAGxG,YAAM,OAAO,KAAK,OAAO,wBAAwB,KAAK,OAAO,iBAAgB,EAAG,CAAC,CAAC;AAClF,YAAM,WAAW;UACf,YAAY;UACZ,OAAO,KAAK,MAAM,KAAK,eAAe;UACtC,QAAQ,KAAK,OAAO,KAAK,eAAe;UACxC,SAAS;UACT,aAAa;UACb,WAAW;UACX,UAAU;UACV,mBAAmB;UACnB,gBAAgB;UAChB,cAAc;UACd,UAAU;UACV,aAAa;UACd,cAAc;;AAEf,YAAM,WAAW;UACf,WAAW;UACX,WAAW;UACX,UAAU;;AAEZ,eACE,MAAA,cAAA,OAAA,EAAK,OAAO,UAAU,WAAU,yBAAwB,GACrD,KAAK,IAAI,SAAC,GAAC;AACV,iBAAO,MAAA,cAAA,KAAA,EAAG,KAAK,EAAE,MAAM,OAAO,UAAU,MAAK,KAAI,SAAS,MAAK,kBAAkB,KAAK,OAAM,CAAC,EAAC,GAAG,EAAE,IAAI;QACzG,CAAC,CAAC;MAGR;AACA,MAAAA,YAAA,UAAA,SAAA,WAAA;AAAA,YAAA,QAAA;AACE,YAAI,QAAyB,KAAK;AAClC,YAAI,QAAQ,KAAK;AAEjB,YAAI,aAAwC;UAC1C,MAAM,YAAU,KAAK;UACrB,SAAS,WAAS,KAAK;;AAGzB,YAAI,MAAM,WAAW;AACnB,qBAAW,OAAO,IAAI,MAAM;;AAG9B,YAAI,MAAM,WAAW;AACnB,qBAAW,WAAW,IAAI,MAAM,UAAU,SAAQ;;AAGpD,YAAI,MAAM,aAAa;AACrB,qBAAW,aAAa,IAAI,MAAM;;AAGpC,YAAI,MAAM,SAAS;AACf,qBAAW,SAAS,IAAI,MAAM;;AAGlC,YAAI,YAA6B;AACjC,YAAI,MAAM,eAAe;AACvB,sBAAY,KAAK,kBAAkB,MAAM,IAAI;;AAE/C,eACE,MAAA;UAAA;UAAA,EAAK,IAAI,2BAA2B,KAAK,IAAI,KAAK,SAAC,GAAC;AAAK,mBAAA,MAAK,IAAI;UAAT,GAAY,OAAO,EAAE,YAAY,WAAU,EAAE;UACnG,MAAM,cAAc,eAAe,UAAU;UAC9C,MAAA,cAAA,SAAA,EACE,MAAK,UACL,IAAI,WAAS,KAAK,IAClB,OAAO,KAAK,MAAM,MAAK,CAAA;UAExB;QAAS;MAGhB;AACF,aAAAA;IAAA,EAtNgC,MAAM,SAAS;AAAlC,YAAA,aAAA;;;;;ACpDb;AAAA;AAAA,YAAQ,aAAa,qBAA4B;AAAA;AAAA;",
  "names": ["TrixEditor"]
}
